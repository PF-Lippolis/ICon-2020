% AILog code
% Copyright Lippolis Pompeo Francesco 2020
% ailog: load 'diabetes.ailog'.

% Rende le condizioni del paziente askable
askable has(I,C).

% Definiamo un albero decisionale per la predizione del diabete.

diabetes_decision_tree(bt(polyuria, bt(gender_male, bt(alopecia, bt(age_over35, bt(muscle_stiffness, leaf(0), leaf(1)), bt(irritability, leaf(1), leaf(0.67))), bt(delayed_healing, leaf(1), leaf(0))), bt(polydipsia, bt(irritability, bt(partial_paresis, bt(delayed_healing, leaf(0), leaf(0.056)), bt(muscle_stiffness, leaf(1), leaf(0))), bt(genital_thrush, bt(age_over45, leaf(0.4), leaf(0)), leaf(1))), bt(muscle_stiffness, leaf(1), bt(irritability, leaf(0), leaf(1))))), bt(polydipsia, bt(delayed_healing, leaf(1), bt(alopecia, leaf(1), bt(itching, leaf(1), bt(obesity, leaf(0.33), leaf(0))))), leaf(1)))).

% Un individuo I ha una certa probabilità di avere il diabete se:
%	esiste un albero decisionale per la predizione del diabete e
%	la relazione has_diabetes(I,Z) ha quella probabilità ovvero:
%		quell'albero predice che l'individuo I ha il diabete con quella probabilità.
has_diabetes(I) <-
	diabetes_decision_tree(Z) &
	has_diabetes(I,Z).
	
% Un albero predice che l'individuo I ha il diabete con una certa probabilità se:
% 	L'albero è un nodo foglia che predice quella probabilità.
has_diabetes(I,leaf(P)) <- leaf(P).

% La probabilità predetta da un nodo foglia è la sua etichetta:
prob leaf(P): P.

% Un albero predice che l'individuo I ha il diabete con una certa probabilità se:
%	la condizione C indicata sulla foglia è vera e
% 	Il sottoalbero destro predice similmente che l'individuo I ha il diabete con quella probabilità.
has_diabetes(I,bt(C,_,T))<-
    has(I,C) &
    has_diabetes(I,T).

% Un albero predice che l'individuo I ha probabilità P di avere il diabete se:
%	la condizione C indicata sulla foglia è falsa e
%	il sottoalbero sinistro predice similmente che l'individuo I ha il diabete con quella probabilità.
has_diabetes(I,bt(C,F,_))<-
	~ has(I,C) &
	has_diabetes(I,F).

% Se l'atomo askable has(I,C) è unknown, I ha una certa probabilità di avere la condizione.
has(I,C)<-
	prob_has(I,C).

% Definiamo ora le probabilità delle condizioni nel caso l'utente non sappia dare una risposta alla domanda.
prob prob_has(I,polyuria): 0.50.
prob prob_has(I,gender_male): 0.63.
prob prob_has(I,alopecia): 0.34.
prob prob_has(I,age_over35): 0.82.
prob prob_has(I,muscle_stiffness): 0.375.
prob prob_has(I,irritability): 0.24.
prob prob_has(I,delayed_healing): 0.46.
prob prob_has(I,polydipsia): 0.45.
prob prob_has(I,partial_paresis): 0.43.
prob prob_has(I,genital_thrush): 0.22.
prob prob_has(I,age_over45): 0.56.
prob prob_has(I,itching): 0.49.
prob has(I,obesity): 0.17.